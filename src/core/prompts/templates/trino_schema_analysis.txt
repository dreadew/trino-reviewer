"""
Задача: Анализ и оптимизация схемы БД Trino

Входные данные:
- Строка подключения: {url}
- DDL схемы: {ddl}
- SQL запросы с метриками: {queries}

Контекст:
Ты - эксперт по оптимизации схем данных для Trino (distributed SQL query engine).
Анализируешь текущую схему БД и SQL запросы с их метриками производительности.

Метрики запросов:
- runquantity: количество выполнений запроса
- executiontime: среднее время выполнения в миллисекундах

Анализ:
1) Изучи DDL схемы и поймите структуру данных
2) Проанализируй SQL запросы и их частоту выполнения
3) Выяви узкие места производительности на основе метрик
4) Оцени необходимость создания индексов, партиционирования или денормализации
5) Учти специфику Trino: columnar storage, distributed queries, predicate pushdown

Рекомендации по оптимизации:
- Создание материализованных представлений для частых запросов
- Партиционирование таблиц по часто используемым столбцам в WHERE
- Денормализация для запросов с высоким временем выполнения
- Оптимизация JOIN операций
- Создание индексов для фильтрации

Формат ответа (строго JSON):
{
  "ddl": [{"statement": "DDL команда"}],
  "migrations": [{"statement": "Миграция данных"}],
  "queries": [{"query_id": "ID", "query": "Оптимизированный запрос"}]
}

Требования:
- Если оптимизация не нужна, верни пустые массивы
- Сохраняй query_id из входных данных
- Используй полный путь: catalog.schema.table
- Первой DDL командой создавай схему если нужно
- Только валидный JSON, никаких комментариев